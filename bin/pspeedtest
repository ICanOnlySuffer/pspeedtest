#!/usr/bin/env ruby

require_relative "../lib/pspeedtest"
require_relative "pspeedtest-cli/lang"
require_relative "pspeedtest-cli/help"
require_relative "pspeedtest-cli/version"

=begin
TODO:
- A better debug system
  - Add more options for formating
  - Make it easier to read
=end

CLI = {
	runs: 1.times,
	file: nil,
	debug: "",
	delay: 10,
	print_errors: false
}

cli = PSpeedTest.new do |test|
	begin
		PSpeedTest::SERVER.update!
		
		download = PSpeedTest::SERVER.download_speed test.to_download
		upload = PSpeedTest::SERVER.upload_speed test.to_upload
		
		debug = CLI[:debug] % {
			"server.host": PSpeedTest::SERVER.host,
			"server.sponsor": PSpeedTest::SERVER.sponsor,
			"server.latency": PSpeedTest::SERVER.latency,
			"server.latitude": PSpeedTest::SERVER.lat,
			"server.longitude": PSpeedTest::SERVER.lon,
			"server.distance.km": PSpeedTest::SERVER.distance,
			"server.distance.mi": PSpeedTest::SERVER.distance * 0.62137119,
			"download.bits": download.bits,
			"download.time": download.time,
			"download.bps": download.bps,
			"upload.bits": upload.bits,
			"upload.time": upload.time,
			"upload.bps": upload.bps
		}
		
		if CLI[:file] then
			File.write CLI[:file], debug, mode: ?a
		else
			print debug
		end
	rescue => error
		puts "#{error.class}: #{error.class}" if CLI[:print_errors]
	end
	
	sleep CLI[:delay]
end

ARGV.each do |arg|
	key, value = arg.split ?=
	
	case key
	when "-h", "--help"
		puts HELP[value] || HELP.values.join
		exit 0
	when "-v", "--version"
		puts VERSION
		exit 0
	when "--download"
		cli.to_download = value == "nil" ? [] : (split '?').map {Integer _1}
	when "--upload"
		cli.to_upload = value == "nil" ? [] : (split '?').map {Integer _1}
	when "--debug"
		CLI[:debug] = value.gsub /\\./, {
			'\n' => ?\n,
			'\t' => ?\t,
			'\\' => ?\\
		}
	when "--delay"
		CLI[:delay] = value.to_i
	when "--runs"
		CLI[:runs] = (value == "infinity") ? loop : value.to_i.times
	when "--file"
		CLI[:file] = value
	when "--print-errors"
		CLI[:print_errors] = value == "true"
	else
		puts HELP.values.join
		exit 1
	end
end

PSpeedTest::USER.update!
cli.run CLI[:runs]











